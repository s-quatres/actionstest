# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:        
  test-addon-with-clusters:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    strategy:
      fail-fast: true
      matrix:
        #ersion: ${{ fromJson(needs.find-supported-versions.outputs.versions) }}
        version: [1.28,1.29]
    env:
      K8S_VERSION: ${{ matrix.version }}
      FLCENV_PREFIX: dynatrace-operator-addon-test-
    steps:
      - name: Test1
        id: test1
        run: |
          echo "Hello"
          echo "ver=$K8S_VERSION" >> $GITHUB_OUTPUT
      - uses: cloudposse/github-action-matrix-outputs-write@main
        id: out
        with:
          matrix-step-name: ${{ github.job }}
          matrix-key: ${{ matrix.version }}
          outputs: |-
            ver: ${{ steps.test1.outputs.ver }}
            ## Multiline string
            
  ## Read matrix outputs 
  read:
    runs-on: ubuntu-latest
    needs: [test-addon-with-clusters]
    steps:
      - uses: cloudposse/github-action-matrix-outputs-read@main
        id: read
        with:
          matrix-step-name: test1
    outputs:
      result: "${{ steps.read.outputs.result }}"
      
  create_release:
    needs: read
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Test
        run: |
          printenv
          echo "Release step."
          echo ${{ fromJson(needs.read.outputs.result).ver }}
